language: cpp

os:
  - linux
  - windows

matrix:
  allow_failures:
    - os: windows

compiler: gcc
dist: xenial

branches:
  only:
    - master

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - g++-9
      - gcc-9
      - libglew-dev
      - xorg-dev
      - ninja-build

services:
  - xvfb

before_install:
  - mkdir $HOME/usr
  - export PATH="$HOME/usr/bin:$PATH"
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then travis_retry wget --no-check-certificate https://github.com/Kitware/CMake/releases/download/v3.15.0/cmake-3.15.0-Linux-x86_64.sh; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then chmod +x cmake-3.15.0-Linux-x86_64.sh ; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then ./cmake-3.15.0-Linux-x86_64.sh --prefix=$HOME/usr --exclude-subdir --skip-license ; fi
  - if [ "$TRAVIS_OS_NAME" = "windows" ]; then travis_retry wget https://github.com/Kitware/CMake/releases/download/v3.15.3/cmake-3.15.3-win32-x86.zip; fi
  - if [ "$TRAVIS_OS_NAME" = "windows" ]; then unzip cmake-3.15.3-win32-x86.zip ; fi
   
before_script:
  - CXX=/usr/bin/g++-9 CC=/usr/bin/gcc-9

script:
  - cd $TRAVIS_BUILD_DIR
  - mkdir build_debug && cd build_debug
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then cmake -GNinja -DDEFINE_DEBUG=ON -DLINUX_BUILD=ON -DTRAVIS_BUILD=ON ../ ; fi
  - if [ "$TRAVIS_OS_NAME" = "windows" ]; then ../cmake-3.15.3-win32-x86/bin/cmake.exe -DDEFINE_DEBUG=ON -DWINDOWS_BUILD=ON -DTRAVIS_BUILD=ON ../ ; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then ninja ; fi
  - if [ "$TRAVIS_OS_NAME" = "windows" ]; then & 'C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\MSBuild\15.0\Bin\MSBuild.exe' bald.sln /t:Build /m ; fi
  - cd bin
  - ./../../scripts/travis/run_examples.sh
  - cd ../../
  - mkdir build_release && cd build_release
  - cmake -GNinja -DDEFINE_RELEASE=ON -DLINUX_BUILD=ON -DTRAVIS_BUILD=ON ../
  - ninja
  - cd bin
  - ./../../scripts/travis/run_examples.sh

  